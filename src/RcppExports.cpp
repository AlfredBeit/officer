// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// solid_fill
std::string solid_fill(int col_font_r, int col_font_g, int col_font_b, int col_font_a);
RcppExport SEXP oxbase_solid_fill(SEXP col_font_rSEXP, SEXP col_font_gSEXP, SEXP col_font_bSEXP, SEXP col_font_aSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type col_font_r(col_font_rSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_g(col_font_gSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_b(col_font_bSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_a(col_font_aSEXP);
    __result = Rcpp::wrap(solid_fill(col_font_r, col_font_g, col_font_b, col_font_a));
    return __result;
END_RCPP
}
// color_css
std::string color_css(int col_font_r, int col_font_g, int col_font_b, int col_font_a);
RcppExport SEXP oxbase_color_css(SEXP col_font_rSEXP, SEXP col_font_gSEXP, SEXP col_font_bSEXP, SEXP col_font_aSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type col_font_r(col_font_rSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_g(col_font_gSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_b(col_font_bSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_a(col_font_aSEXP);
    __result = Rcpp::wrap(color_css(col_font_r, col_font_g, col_font_b, col_font_a));
    return __result;
END_RCPP
}
// w_ppr
std::string w_ppr(std::string text_align, int pb, int pt, int pl, int pr, int shd_r, int shd_g, int shd_b, int shd_a, IntegerVector btlr_red, IntegerVector btlr_green, IntegerVector btlr_blue, IntegerVector btlr_alpha, CharacterVector type, IntegerVector width);
RcppExport SEXP oxbase_w_ppr(SEXP text_alignSEXP, SEXP pbSEXP, SEXP ptSEXP, SEXP plSEXP, SEXP prSEXP, SEXP shd_rSEXP, SEXP shd_gSEXP, SEXP shd_bSEXP, SEXP shd_aSEXP, SEXP btlr_redSEXP, SEXP btlr_greenSEXP, SEXP btlr_blueSEXP, SEXP btlr_alphaSEXP, SEXP typeSEXP, SEXP widthSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type text_align(text_alignSEXP);
    Rcpp::traits::input_parameter< int >::type pb(pbSEXP);
    Rcpp::traits::input_parameter< int >::type pt(ptSEXP);
    Rcpp::traits::input_parameter< int >::type pl(plSEXP);
    Rcpp::traits::input_parameter< int >::type pr(prSEXP);
    Rcpp::traits::input_parameter< int >::type shd_r(shd_rSEXP);
    Rcpp::traits::input_parameter< int >::type shd_g(shd_gSEXP);
    Rcpp::traits::input_parameter< int >::type shd_b(shd_bSEXP);
    Rcpp::traits::input_parameter< int >::type shd_a(shd_aSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_red(btlr_redSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_green(btlr_greenSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_blue(btlr_blueSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_alpha(btlr_alphaSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type type(typeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type width(widthSEXP);
    __result = Rcpp::wrap(w_ppr(text_align, pb, pt, pl, pr, shd_r, shd_g, shd_b, shd_a, btlr_red, btlr_green, btlr_blue, btlr_alpha, type, width));
    return __result;
END_RCPP
}
// a_ppr
std::string a_ppr(std::string text_align, int pb, int pt, int pl, int pr, int shd_r, int shd_g, int shd_b, int shd_a, IntegerVector btlr_red, IntegerVector btlr_green, IntegerVector btlr_blue, IntegerVector btlr_alpha, CharacterVector type, IntegerVector width);
RcppExport SEXP oxbase_a_ppr(SEXP text_alignSEXP, SEXP pbSEXP, SEXP ptSEXP, SEXP plSEXP, SEXP prSEXP, SEXP shd_rSEXP, SEXP shd_gSEXP, SEXP shd_bSEXP, SEXP shd_aSEXP, SEXP btlr_redSEXP, SEXP btlr_greenSEXP, SEXP btlr_blueSEXP, SEXP btlr_alphaSEXP, SEXP typeSEXP, SEXP widthSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type text_align(text_alignSEXP);
    Rcpp::traits::input_parameter< int >::type pb(pbSEXP);
    Rcpp::traits::input_parameter< int >::type pt(ptSEXP);
    Rcpp::traits::input_parameter< int >::type pl(plSEXP);
    Rcpp::traits::input_parameter< int >::type pr(prSEXP);
    Rcpp::traits::input_parameter< int >::type shd_r(shd_rSEXP);
    Rcpp::traits::input_parameter< int >::type shd_g(shd_gSEXP);
    Rcpp::traits::input_parameter< int >::type shd_b(shd_bSEXP);
    Rcpp::traits::input_parameter< int >::type shd_a(shd_aSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_red(btlr_redSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_green(btlr_greenSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_blue(btlr_blueSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_alpha(btlr_alphaSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type type(typeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type width(widthSEXP);
    __result = Rcpp::wrap(a_ppr(text_align, pb, pt, pl, pr, shd_r, shd_g, shd_b, shd_a, btlr_red, btlr_green, btlr_blue, btlr_alpha, type, width));
    return __result;
END_RCPP
}
// css_ppr
std::string css_ppr(std::string text_align, int pb, int pt, int pl, int pr, int shd_r, int shd_g, int shd_b, int shd_a, IntegerVector btlr_red, IntegerVector btlr_green, IntegerVector btlr_blue, IntegerVector btlr_alpha, CharacterVector type, IntegerVector width);
RcppExport SEXP oxbase_css_ppr(SEXP text_alignSEXP, SEXP pbSEXP, SEXP ptSEXP, SEXP plSEXP, SEXP prSEXP, SEXP shd_rSEXP, SEXP shd_gSEXP, SEXP shd_bSEXP, SEXP shd_aSEXP, SEXP btlr_redSEXP, SEXP btlr_greenSEXP, SEXP btlr_blueSEXP, SEXP btlr_alphaSEXP, SEXP typeSEXP, SEXP widthSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type text_align(text_alignSEXP);
    Rcpp::traits::input_parameter< int >::type pb(pbSEXP);
    Rcpp::traits::input_parameter< int >::type pt(ptSEXP);
    Rcpp::traits::input_parameter< int >::type pl(plSEXP);
    Rcpp::traits::input_parameter< int >::type pr(prSEXP);
    Rcpp::traits::input_parameter< int >::type shd_r(shd_rSEXP);
    Rcpp::traits::input_parameter< int >::type shd_g(shd_gSEXP);
    Rcpp::traits::input_parameter< int >::type shd_b(shd_bSEXP);
    Rcpp::traits::input_parameter< int >::type shd_a(shd_aSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_red(btlr_redSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_green(btlr_greenSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_blue(btlr_blueSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_alpha(btlr_alphaSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type type(typeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type width(widthSEXP);
    __result = Rcpp::wrap(css_ppr(text_align, pb, pt, pl, pr, shd_r, shd_g, shd_b, shd_a, btlr_red, btlr_green, btlr_blue, btlr_alpha, type, width));
    return __result;
END_RCPP
}
// w_rpr
std::string w_rpr(double size, bool italic, bool bold, bool underlined, int col_font_r, int col_font_g, int col_font_b, int col_font_a, int col_shading_r, int col_shading_g, int col_shading_b, int col_shading_a, std::string fontname, std::string vertical_align);
RcppExport SEXP oxbase_w_rpr(SEXP sizeSEXP, SEXP italicSEXP, SEXP boldSEXP, SEXP underlinedSEXP, SEXP col_font_rSEXP, SEXP col_font_gSEXP, SEXP col_font_bSEXP, SEXP col_font_aSEXP, SEXP col_shading_rSEXP, SEXP col_shading_gSEXP, SEXP col_shading_bSEXP, SEXP col_shading_aSEXP, SEXP fontnameSEXP, SEXP vertical_alignSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< bool >::type italic(italicSEXP);
    Rcpp::traits::input_parameter< bool >::type bold(boldSEXP);
    Rcpp::traits::input_parameter< bool >::type underlined(underlinedSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_r(col_font_rSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_g(col_font_gSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_b(col_font_bSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_a(col_font_aSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_r(col_shading_rSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_g(col_shading_gSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_b(col_shading_bSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_a(col_shading_aSEXP);
    Rcpp::traits::input_parameter< std::string >::type fontname(fontnameSEXP);
    Rcpp::traits::input_parameter< std::string >::type vertical_align(vertical_alignSEXP);
    __result = Rcpp::wrap(w_rpr(size, italic, bold, underlined, col_font_r, col_font_g, col_font_b, col_font_a, col_shading_r, col_shading_g, col_shading_b, col_shading_a, fontname, vertical_align));
    return __result;
END_RCPP
}
// a_rpr
std::string a_rpr(double size, bool italic, bool bold, bool underlined, int col_font_r, int col_font_g, int col_font_b, int col_font_a, int col_shading_r, int col_shading_g, int col_shading_b, int col_shading_a, std::string fontname, std::string vertical_align);
RcppExport SEXP oxbase_a_rpr(SEXP sizeSEXP, SEXP italicSEXP, SEXP boldSEXP, SEXP underlinedSEXP, SEXP col_font_rSEXP, SEXP col_font_gSEXP, SEXP col_font_bSEXP, SEXP col_font_aSEXP, SEXP col_shading_rSEXP, SEXP col_shading_gSEXP, SEXP col_shading_bSEXP, SEXP col_shading_aSEXP, SEXP fontnameSEXP, SEXP vertical_alignSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< bool >::type italic(italicSEXP);
    Rcpp::traits::input_parameter< bool >::type bold(boldSEXP);
    Rcpp::traits::input_parameter< bool >::type underlined(underlinedSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_r(col_font_rSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_g(col_font_gSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_b(col_font_bSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_a(col_font_aSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_r(col_shading_rSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_g(col_shading_gSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_b(col_shading_bSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_a(col_shading_aSEXP);
    Rcpp::traits::input_parameter< std::string >::type fontname(fontnameSEXP);
    Rcpp::traits::input_parameter< std::string >::type vertical_align(vertical_alignSEXP);
    __result = Rcpp::wrap(a_rpr(size, italic, bold, underlined, col_font_r, col_font_g, col_font_b, col_font_a, col_shading_r, col_shading_g, col_shading_b, col_shading_a, fontname, vertical_align));
    return __result;
END_RCPP
}
// css_rpr
std::string css_rpr(double size, bool italic, bool bold, bool underlined, int col_font_r, int col_font_g, int col_font_b, int col_font_a, int col_shading_r, int col_shading_g, int col_shading_b, int col_shading_a, std::string fontname, std::string vertical_align);
RcppExport SEXP oxbase_css_rpr(SEXP sizeSEXP, SEXP italicSEXP, SEXP boldSEXP, SEXP underlinedSEXP, SEXP col_font_rSEXP, SEXP col_font_gSEXP, SEXP col_font_bSEXP, SEXP col_font_aSEXP, SEXP col_shading_rSEXP, SEXP col_shading_gSEXP, SEXP col_shading_bSEXP, SEXP col_shading_aSEXP, SEXP fontnameSEXP, SEXP vertical_alignSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< bool >::type italic(italicSEXP);
    Rcpp::traits::input_parameter< bool >::type bold(boldSEXP);
    Rcpp::traits::input_parameter< bool >::type underlined(underlinedSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_r(col_font_rSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_g(col_font_gSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_b(col_font_bSEXP);
    Rcpp::traits::input_parameter< int >::type col_font_a(col_font_aSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_r(col_shading_rSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_g(col_shading_gSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_b(col_shading_bSEXP);
    Rcpp::traits::input_parameter< int >::type col_shading_a(col_shading_aSEXP);
    Rcpp::traits::input_parameter< std::string >::type fontname(fontnameSEXP);
    Rcpp::traits::input_parameter< std::string >::type vertical_align(vertical_alignSEXP);
    __result = Rcpp::wrap(css_rpr(size, italic, bold, underlined, col_font_r, col_font_g, col_font_b, col_font_a, col_shading_r, col_shading_g, col_shading_b, col_shading_a, fontname, vertical_align));
    return __result;
END_RCPP
}
// w_tcpr
std::string w_tcpr(std::string vertical_align, std::string text_direction, int mb, int mt, int ml, int mr, int shd_r, int shd_g, int shd_b, int shd_a, bool do_bgimg, std::string bgimg_rid, std::string bgimg_path, IntegerVector btlr_red, IntegerVector btlr_green, IntegerVector btlr_blue, IntegerVector btlr_alpha, CharacterVector type, IntegerVector width, int row_span, int column_span);
RcppExport SEXP oxbase_w_tcpr(SEXP vertical_alignSEXP, SEXP text_directionSEXP, SEXP mbSEXP, SEXP mtSEXP, SEXP mlSEXP, SEXP mrSEXP, SEXP shd_rSEXP, SEXP shd_gSEXP, SEXP shd_bSEXP, SEXP shd_aSEXP, SEXP do_bgimgSEXP, SEXP bgimg_ridSEXP, SEXP bgimg_pathSEXP, SEXP btlr_redSEXP, SEXP btlr_greenSEXP, SEXP btlr_blueSEXP, SEXP btlr_alphaSEXP, SEXP typeSEXP, SEXP widthSEXP, SEXP row_spanSEXP, SEXP column_spanSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type vertical_align(vertical_alignSEXP);
    Rcpp::traits::input_parameter< std::string >::type text_direction(text_directionSEXP);
    Rcpp::traits::input_parameter< int >::type mb(mbSEXP);
    Rcpp::traits::input_parameter< int >::type mt(mtSEXP);
    Rcpp::traits::input_parameter< int >::type ml(mlSEXP);
    Rcpp::traits::input_parameter< int >::type mr(mrSEXP);
    Rcpp::traits::input_parameter< int >::type shd_r(shd_rSEXP);
    Rcpp::traits::input_parameter< int >::type shd_g(shd_gSEXP);
    Rcpp::traits::input_parameter< int >::type shd_b(shd_bSEXP);
    Rcpp::traits::input_parameter< int >::type shd_a(shd_aSEXP);
    Rcpp::traits::input_parameter< bool >::type do_bgimg(do_bgimgSEXP);
    Rcpp::traits::input_parameter< std::string >::type bgimg_rid(bgimg_ridSEXP);
    Rcpp::traits::input_parameter< std::string >::type bgimg_path(bgimg_pathSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_red(btlr_redSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_green(btlr_greenSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_blue(btlr_blueSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_alpha(btlr_alphaSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type type(typeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type row_span(row_spanSEXP);
    Rcpp::traits::input_parameter< int >::type column_span(column_spanSEXP);
    __result = Rcpp::wrap(w_tcpr(vertical_align, text_direction, mb, mt, ml, mr, shd_r, shd_g, shd_b, shd_a, do_bgimg, bgimg_rid, bgimg_path, btlr_red, btlr_green, btlr_blue, btlr_alpha, type, width, row_span, column_span));
    return __result;
END_RCPP
}
// a_tcpr
std::string a_tcpr(std::string vertical_align, std::string text_direction, int mb, int mt, int ml, int mr, int shd_r, int shd_g, int shd_b, int shd_a, bool do_bgimg, std::string bgimg_rid, std::string bgimg_path, IntegerVector btlr_red, IntegerVector btlr_green, IntegerVector btlr_blue, IntegerVector btlr_alpha, CharacterVector type, IntegerVector width, int row_span, int column_span);
RcppExport SEXP oxbase_a_tcpr(SEXP vertical_alignSEXP, SEXP text_directionSEXP, SEXP mbSEXP, SEXP mtSEXP, SEXP mlSEXP, SEXP mrSEXP, SEXP shd_rSEXP, SEXP shd_gSEXP, SEXP shd_bSEXP, SEXP shd_aSEXP, SEXP do_bgimgSEXP, SEXP bgimg_ridSEXP, SEXP bgimg_pathSEXP, SEXP btlr_redSEXP, SEXP btlr_greenSEXP, SEXP btlr_blueSEXP, SEXP btlr_alphaSEXP, SEXP typeSEXP, SEXP widthSEXP, SEXP row_spanSEXP, SEXP column_spanSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type vertical_align(vertical_alignSEXP);
    Rcpp::traits::input_parameter< std::string >::type text_direction(text_directionSEXP);
    Rcpp::traits::input_parameter< int >::type mb(mbSEXP);
    Rcpp::traits::input_parameter< int >::type mt(mtSEXP);
    Rcpp::traits::input_parameter< int >::type ml(mlSEXP);
    Rcpp::traits::input_parameter< int >::type mr(mrSEXP);
    Rcpp::traits::input_parameter< int >::type shd_r(shd_rSEXP);
    Rcpp::traits::input_parameter< int >::type shd_g(shd_gSEXP);
    Rcpp::traits::input_parameter< int >::type shd_b(shd_bSEXP);
    Rcpp::traits::input_parameter< int >::type shd_a(shd_aSEXP);
    Rcpp::traits::input_parameter< bool >::type do_bgimg(do_bgimgSEXP);
    Rcpp::traits::input_parameter< std::string >::type bgimg_rid(bgimg_ridSEXP);
    Rcpp::traits::input_parameter< std::string >::type bgimg_path(bgimg_pathSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_red(btlr_redSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_green(btlr_greenSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_blue(btlr_blueSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_alpha(btlr_alphaSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type type(typeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type row_span(row_spanSEXP);
    Rcpp::traits::input_parameter< int >::type column_span(column_spanSEXP);
    __result = Rcpp::wrap(a_tcpr(vertical_align, text_direction, mb, mt, ml, mr, shd_r, shd_g, shd_b, shd_a, do_bgimg, bgimg_rid, bgimg_path, btlr_red, btlr_green, btlr_blue, btlr_alpha, type, width, row_span, column_span));
    return __result;
END_RCPP
}
// css_tcpr
std::string css_tcpr(std::string vertical_align, std::string text_direction, int mb, int mt, int ml, int mr, int shd_r, int shd_g, int shd_b, int shd_a, bool do_bgimg, std::string bgimg_rid, std::string bgimg_path, IntegerVector btlr_red, IntegerVector btlr_green, IntegerVector btlr_blue, IntegerVector btlr_alpha, CharacterVector type, IntegerVector width, int row_span, int column_span);
RcppExport SEXP oxbase_css_tcpr(SEXP vertical_alignSEXP, SEXP text_directionSEXP, SEXP mbSEXP, SEXP mtSEXP, SEXP mlSEXP, SEXP mrSEXP, SEXP shd_rSEXP, SEXP shd_gSEXP, SEXP shd_bSEXP, SEXP shd_aSEXP, SEXP do_bgimgSEXP, SEXP bgimg_ridSEXP, SEXP bgimg_pathSEXP, SEXP btlr_redSEXP, SEXP btlr_greenSEXP, SEXP btlr_blueSEXP, SEXP btlr_alphaSEXP, SEXP typeSEXP, SEXP widthSEXP, SEXP row_spanSEXP, SEXP column_spanSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type vertical_align(vertical_alignSEXP);
    Rcpp::traits::input_parameter< std::string >::type text_direction(text_directionSEXP);
    Rcpp::traits::input_parameter< int >::type mb(mbSEXP);
    Rcpp::traits::input_parameter< int >::type mt(mtSEXP);
    Rcpp::traits::input_parameter< int >::type ml(mlSEXP);
    Rcpp::traits::input_parameter< int >::type mr(mrSEXP);
    Rcpp::traits::input_parameter< int >::type shd_r(shd_rSEXP);
    Rcpp::traits::input_parameter< int >::type shd_g(shd_gSEXP);
    Rcpp::traits::input_parameter< int >::type shd_b(shd_bSEXP);
    Rcpp::traits::input_parameter< int >::type shd_a(shd_aSEXP);
    Rcpp::traits::input_parameter< bool >::type do_bgimg(do_bgimgSEXP);
    Rcpp::traits::input_parameter< std::string >::type bgimg_rid(bgimg_ridSEXP);
    Rcpp::traits::input_parameter< std::string >::type bgimg_path(bgimg_pathSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_red(btlr_redSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_green(btlr_greenSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_blue(btlr_blueSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type btlr_alpha(btlr_alphaSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type type(typeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type row_span(row_spanSEXP);
    Rcpp::traits::input_parameter< int >::type column_span(column_spanSEXP);
    __result = Rcpp::wrap(css_tcpr(vertical_align, text_direction, mb, mt, ml, mr, shd_r, shd_g, shd_b, shd_a, do_bgimg, bgimg_rid, bgimg_path, btlr_red, btlr_green, btlr_blue, btlr_alpha, type, width, row_span, column_span));
    return __result;
END_RCPP
}
